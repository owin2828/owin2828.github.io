<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://owin2828.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://owin2828.github.io/" rel="alternate" type="text/html" /><updated>2020-01-29T14:45:35+09:00</updated><id>https://owin2828.github.io/feed.xml</id><title type="html">낮코밤코</title><subtitle>Already done, cause will do</subtitle><author><name>owin2828</name></author><entry><title type="html">[AWS] IAM</title><link href="https://owin2828.github.io/devlog/2020/01/29/aws-7.html" rel="alternate" type="text/html" title="[AWS] IAM" /><published>2020-01-29T09:51:00+09:00</published><updated>2020-01-29T09:51:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/29/aws-7</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/29/aws-7.html">&lt;h2 id=&quot;id0&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM&lt;/code&gt;에 대해 살펴보고, 접근 제어 및 권한 설정을 하는 방법에 대해 알아볼 예정이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. IAM이란?&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IAM&lt;/code&gt;은 Identity and Access Management의 약자로, AWS 리소스에 대한 접근을 안전하게 제어할 수 있는 웹 서비스이다.&lt;br /&gt;
이 설정을 통해 리소스를 사용하도록 인증하거나, 권한을 부여할 수 있다.&lt;/p&gt;

&lt;p&gt;처음 AWS 계정을 생성하게 되면, 해당 계정에 모든 리소스에 접근할 수 있는 권한이 부여된 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; 계정이 생성된다.&lt;br /&gt;
이러한 사용자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root 사용자&lt;/code&gt;라고 부르며, 로그인할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;Email&lt;/code&gt;을 입력하여 로그인하게 된다.&lt;br /&gt;
이에 AWS는 일상작업뿐 아니라 관리작업에도 이 루트사용자를 사용하는 것을 &lt;code class=&quot;highlighter-rouge&quot;&gt;비권장&lt;/code&gt;한다.&lt;br /&gt;
대신 &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/best-practices.html&quot;&gt;이곳&lt;/a&gt;과 같은 방법으로 IAM 사용자를 생성할 때만 사용하도록 권장한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;즉 루트 사용자는 계정 및 서비스 관기 작업에만 사용하기를 권장한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. IAM의 기능&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;IAM은 다양한 기능을 제공하지만, 주로 사용하게 될 기능은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AWS 계정에 대한 공유 접근제어&lt;/li&gt;
  &lt;li&gt;권한을 세분화하여 부여&lt;/li&gt;
  &lt;li&gt;MFA(멀티 팩터 인증)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;더 구체적인 사항은 &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/introduction.html&quot;&gt;AWS 공식 홈페이지&lt;/a&gt;를 참고하기 바란다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. IAM 유저 생성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;콘솔에 로그인하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;내 보안자격 증명&lt;/code&gt;을 눌러준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;위와 같은 팝업창이 뜨게 되는데 여기서 빨간 사각형의 버튼을 클릭한다.
    &lt;blockquote&gt;
      &lt;p&gt;혹은 서비스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM&lt;/code&gt;을 검색하여 들어가도 된다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;사용자 추가&lt;/code&gt; 버튼을 눌러 새로운 IAM 사용자를 추가해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;생성할 사용자의 이름을 입력한다.&lt;/li&gt;
  &lt;li&gt;액세스 유형은 &lt;code class=&quot;highlighter-rouge&quot;&gt;콘솔&lt;/code&gt;로 설정한다. (추후, 키를 발급받을 수 있다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;권한 설정에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;그룹 생성&lt;/code&gt;을 클릭한다.&lt;br /&gt;
그룹에 권한을 설정하고 유저를 추가하면, 관리가 &lt;code class=&quot;highlighter-rouge&quot;&gt;편리&lt;/code&gt;하다.
    &lt;blockquote&gt;
      &lt;p&gt;만약 특정 유저에게서 권한을 제거하고 싶다면, 그룹에서 사용자를 제거하면 된다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;그룹 이름을 지정후, &lt;code class=&quot;highlighter-rouge&quot;&gt;AdministratorAccess&lt;/code&gt;를 체크하여 관리자 권한을 해당 그룹에 부여한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;그룹 생성&lt;/code&gt;을 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;위와 같이 성공적으로 추가되었음을 확인할 수 있고, 다음 단계로 넘어간다.
    &lt;blockquote&gt;
      &lt;p&gt;다음 단계는 &lt;code class=&quot;highlighter-rouge&quot;&gt;태그&lt;/code&gt;이지만, 딱히 추가할 태그가 없으므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;검토&lt;/code&gt;로 가도록 한다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;생성한 정보를 확인 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자 만들기&lt;/code&gt;를 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사용자들이 접속할 &lt;code class=&quot;highlighter-rouge&quot;&gt;콘솔 주소&lt;/code&gt;가 표시되며, 해당 주소를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM 유저&lt;/code&gt;로 로그인이 가능하다.&lt;/li&gt;
  &lt;li&gt;사용자의 액세스 키(액세스 키 ID &amp;amp; 보안 액세스 키)를 확인하려면, &lt;code class=&quot;highlighter-rouge&quot;&gt;표시&lt;/code&gt; 버튼을 눌러 확인한다.&lt;/li&gt;
  &lt;li&gt;액세스 키를 저장하려면, &lt;code class=&quot;highlighter-rouge&quot;&gt;.csv 다운로드&lt;/code&gt; 버튼을 클릭한 후 안전한 위치에 저장한다.
    &lt;blockquote&gt;
      &lt;p&gt;보안 액세스 키는 이 단계에서만 확인 및 다운로드가 가능하다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;다시는&lt;/code&gt; 확인하거나 다운로드 할 수 없으므로 주의하자.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IAM 유저&lt;/code&gt;가 생성됨을 확인할 수 있다.&lt;br /&gt;
앞으로는 IAM유저로 로그인하여 네트워크를 구성하면 된다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id4&quot;&gt;4. 루트계정 MFA 활성화&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;AWS에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;MFA&lt;/code&gt;는 보안을 강화하는 수단이다. AWS계정 및 개별 IAM 사용자들에 대해 AWS MFA를 활성화할 수 있다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;루트계정&lt;/code&gt;에는 MFA를 활성화하는것이 권장되며, 현재는 토큰 기반의 가상 MfA 어플리케이션만 존재한다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;2019.02.01 이후로 SMS 문자 메세지 기반 방식은 더이상 지원되지 않는다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측메뉴의 &lt;code class=&quot;highlighter-rouge&quot;&gt;대시보드&lt;/code&gt;를 누른 후, 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;MFA 관리&lt;/code&gt; 버튼을 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MFA 활성화&lt;/code&gt; 버튼을 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_13.png&quot; alt=&quot;&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;가상 MFA 디바이스&lt;/code&gt;를 체크하고 계속을 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_14.png&quot; alt=&quot;&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;QR 코드 표시&lt;/code&gt;를 클릭하여 나오는 QR 코드를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google OTP&lt;/code&gt;를 설치하여 스캔하면 MFA 코드가 생성된다.&lt;/li&gt;
  &lt;li&gt;생성된 2개의 &lt;code class=&quot;highlighter-rouge&quot;&gt;MFA 코드&lt;/code&gt;를 입력하여 할당을 누른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_15.png&quot; alt=&quot;&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;성공적으로 할당시, 사진과 같이 성공했다는 표시가 되며, 루트계정 로그인은 &lt;code class=&quot;highlighter-rouge&quot;&gt;MFA&lt;/code&gt; 인증을 해야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;루트 계정으로 로그인할 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;MFA&lt;/code&gt; 코드를 입력하는 화면이 뜨게되며,  &lt;code class=&quot;highlighter-rouge&quot;&gt;Google OTP&lt;/code&gt;에서 코드를 입력하면 로그인할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id5&quot;&gt;5. IAM 역할 부여&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;IAM에서 제공하는 기능중 &lt;code class=&quot;highlighter-rouge&quot;&gt;역할&lt;/code&gt;을 사용하면 특정 인스턴스에 제약을 걸 수 있다.&lt;br /&gt;
이어지는 실습에서는 특정 EC2에게 S3버킷에 대한 접근 제어 역할을 부여하겠다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;역할&lt;/code&gt;을 클릭 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;역할 만들기&lt;/code&gt;를 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;우리는 특정 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;에게 역할을 부여할 것이므로, 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;를 클릭 후 다음을 누른다.
    &lt;blockquote&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;다른 AWS 계정&lt;/code&gt;을 눌러 특정 계정에게 역할을 부여할 수도 있다.&lt;br /&gt;
이런 경우, 계정 ID는 이메일 형식의 로그인ID가 아니라, 내 정보에서 볼 수 있는 12자리 숫자 ID이다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;특정 EC2에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;버킷에 접근할 역할을 부여할 것이므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;amazons3fullaccess&lt;/code&gt;를 검색 후 체크하여 다음을 클릭한다.
    &lt;blockquote&gt;
      &lt;p&gt;이어지는 태그는 건너뛰고 &lt;code class=&quot;highlighter-rouge&quot;&gt;검토&lt;/code&gt;를 클릭한다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;역할의 이름을 지정하고 방금 지정한 정책이 맞는지 확인 후, 만들기를 클릭한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;생성한 역할이 지정한 이름과 할당한 서비스를 표시함을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_7_22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;EC2를 생성할 때, 우리가 지정한 역할을 부여할 수 있음을 알 수 있다.&lt;br /&gt;
이렇게 생성된 EC2 인스턴스는 S3외의 다른 서비스의 접근은 &lt;code class=&quot;highlighter-rouge&quot;&gt;불가능&lt;/code&gt;해진다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id6&quot;&gt;6. 끝마치며&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;AWS의 기본 구성을 알아봤으니, 그 다음으로 보안 및 권한설정을 알아보았다.&lt;br /&gt;
실제 AWS에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM&lt;/code&gt; 설정은 적극 권장되니, 앞으로는 적극 사용하자.&lt;/p&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">들어가기 앞서 본 포스팅에서는 IAM에 대해 살펴보고, 접근 제어 및 권한 설정을 하는 방법에 대해 알아볼 예정이다.</summary></entry><entry><title type="html">[CI/CD] Travis CI 파이프라인 구축하기</title><link href="https://owin2828.github.io/devlog/2020/01/28/cicd-2.html" rel="alternate" type="text/html" title="[CI/CD] Travis CI 파이프라인 구축하기" /><published>2020-01-28T14:20:00+09:00</published><updated>2020-01-28T14:20:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/28/cicd-2</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/28/cicd-2.html">&lt;h2 id=&quot;id0&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://owin2828.github.io/devlog/2020/01/10/aws-1.html&quot;&gt;AWS 기초 시리즈&lt;/a&gt;에서 AWS의 구성을 살펴보았으니, 배운 것을 활용할 겸 AWS를 적극 사용하려한다.&lt;br /&gt;
물론 AWS에서 제공하는 Code Build나 Code Pipeline까지 활용해야 적극 활용이라 할 수 있지만, CI는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jenkins&lt;/code&gt;를 이용하고 CD는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Code Deploy&lt;/code&gt;를 이용하여 구축하겠다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/ko/codedeploy/&quot;&gt;AWS Code Deploy&lt;/a&gt;는 AWS에서 제공하는 배포 서비스로, EC2에서 사용하는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;무료&lt;/code&gt;이다.&lt;br /&gt;
 &lt;code class=&quot;highlighter-rouge&quot;&gt;On-premise&lt;/code&gt;에서 Code Deploy를 사용하는 경우는 업데이트당 0.02USD가 &lt;code class=&quot;highlighter-rouge&quot;&gt;과금&lt;/code&gt;된다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. Why Jenkins?&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;나는 처음에 다음과 같은 이유로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Travis&lt;/code&gt;를 사용하여 환경을 구축하려 했다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;무료(오픈소스에 한해서)&lt;/li&gt;
  &lt;li&gt;GitHub와의 강력한 연동&lt;/li&gt;
  &lt;li&gt;추가적인 서버 필요 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하지만 다음과 같은 결정적인 단점이 존재하였고, 이는 굉장히 치명적이었다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;래퍼런스 문서가 &lt;code class=&quot;highlighter-rouge&quot;&gt;없음&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아무것도 아닌 문제처럼 보일 수 있으나, 정말 &lt;code class=&quot;highlighter-rouge&quot;&gt;심각하게&lt;/code&gt; 내가 원하는 방향에 관련된 문서가 없었다.&lt;br /&gt;
Jenkins는 다양한 플러그인과 이를 Script로 표현하여 설정하는 다양한 문서들이 존재하는 반면에, 
Travis는 Unity를 배포하는 방법에 관련된 문서가 &lt;code class=&quot;highlighter-rouge&quot;&gt;없었다&lt;/code&gt;.&lt;br /&gt;
그나마 존재하는 문서들은 Mac 환경에서 진행된 개발이 전부였고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Window&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;에서 진행하는 내게 이는 상당한 부담으로 다가왔다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;아무것도 안하고 이 일만 하면 모를까 회사일과 병행하며 삽질을 하기에는 무리였다..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;결국 하루의 삽질과 고민 끝에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jenkins&lt;/code&gt;로 노선을 변경했다. &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;를 공부하고 배웠으니 이렇게 된김에 free tier가 유지되는 동안에 적극 활용해보자는 다짐과 함께.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;만약, AWS CI/CD에 관심이 있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Code Build &amp;amp; Code Pipeline&lt;/code&gt;을 사용하는 것을 추천한다.&lt;br /&gt;
AWS도 훌륭한 빌드 툴과 전체적인 파이프라인을 관리하는 툴을 제공한다.&lt;br /&gt;
하지만 Code Build는 빌드 시간으로, Code Pipeline은 활성화된 파이프라인 개수로 &lt;code class=&quot;highlighter-rouge&quot;&gt;과금&lt;/code&gt;한다.&lt;br /&gt;
물론 &lt;code class=&quot;highlighter-rouge&quot;&gt;프리티어&lt;/code&gt;를 제공하지만, 장기적으로 생각을 잘해서 선택하기를 바란다.&lt;br /&gt;
&lt;a href=&quot;https://jojoldu.tistory.com/282?category=777282&quot;&gt;여기&lt;/a&gt; 훌륭한 자료가 있어 링크를 공유한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. 전체 구성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/cicd/newcicd_2_1.png&quot; alt=&quot;전체 구성도(App 배포 미완성)&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt; 
내가 구성한  CI/CD의 전체 구성도는 위와 같은데, Jenkins를 이용하여 CI를 구축하고 Code Deploy를 이용해 CD를 구축하기로 했다.&lt;br /&gt;
둘 사이의 연결은 Jenkins에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Code Deploy Pulgin&lt;/code&gt;을 사용할 계획이다.&lt;br /&gt;
이러한 파이프 라인을 통해 S3에 빌드 결과물을 저장하고, AWS &lt;code class=&quot;highlighter-rouge&quot;&gt;Code Deploy&lt;/code&gt;에서 해당 결과물을 가지고 우리가 가동할 APP 서버에 배포하는 방식이다.&lt;br /&gt;
여기서 Jenkins Build Server와 배포를 위한 앱 서버는 모두 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;를 사용할 것이며, &lt;a href=&quot;https://owin2828.github.io/devlog/2020/01/15/aws-3.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;&lt;/a&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM&lt;/code&gt; 설정을 통해 해나갈 것이다.&lt;/p&gt;

&lt;p&gt;App은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Unity&lt;/code&gt;를 사용하여 만들고 &lt;code class=&quot;highlighter-rouge&quot;&gt;구글 플레이스토어&lt;/code&gt;에 배포할 계획이며, 하나의 App 서버를 두고 가동할 예정이다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;배포하는 방식은 이 글을 작성하는 시점에서 아직 다른 개발자와 협의가 이루어지지 않아 &lt;code class=&quot;highlighter-rouge&quot;&gt;미완성&lt;/code&gt;으로 남겨놓았다.&lt;br /&gt;
추후, 논의되어 합의가 이루어지면 &lt;code class=&quot;highlighter-rouge&quot;&gt;업데이트&lt;/code&gt;할 예정이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>owin2828</name></author><category term="devops" /><summary type="html">들어가기 앞서 AWS 기초 시리즈에서 AWS의 구성을 살펴보았으니, 배운 것을 활용할 겸 AWS를 적극 사용하려한다. 물론 AWS에서 제공하는 Code Build나 Code Pipeline까지 활용해야 적극 활용이라 할 수 있지만, CI는 Jenkins를 이용하고 CD는 Code Deploy를 이용하여 구축하겠다. AWS Code Deploy는 AWS에서 제공하는 배포 서비스로, EC2에서 사용하는 경우 무료이다. On-premise에서 Code Deploy를 사용하는 경우는 업데이트당 0.02USD가 과금된다.</summary></entry><entry><title type="html">[AWS] Private Subnet, NAT, ELB, Elastic IP, S3 (실습)</title><link href="https://owin2828.github.io/devlog/2020/01/16/aws-6.html" rel="alternate" type="text/html" title="[AWS] Private Subnet, NAT, ELB, Elastic IP, S3 (실습)" /><published>2020-01-16T17:12:00+09:00</published><updated>2020-01-16T17:12:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/16/aws-6</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/16/aws-6.html">&lt;h2 id=&quot;id0&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;본 포스팅에서는 다음과 같은 구성요소들을 살펴볼 예정이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Private Subnet&lt;/code&gt;을 구성하는 방법&lt;/li&gt;
  &lt;li&gt;Bastion Host를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Private Subnet&lt;/code&gt;에 접근하는 방법&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ELB&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Elastic IP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. Private Subnet 구성 및 접근&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;우선 구성하는 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;간단&lt;/code&gt;하다. 그냥 라우팅 테이블을 하나 만들고,&lt;br /&gt;
인터넷 게이트웨이를 설정하지 않으면 그만이다.&lt;/p&gt;

&lt;p&gt;접근 또한 마찬가지로 어렵지 않은데, 우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bastion Host&lt;/code&gt;로 접속 후&lt;br /&gt;
다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;내부&lt;/code&gt;적으로 접속을 진행하면된다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;대략적으로 그려보면 다음과 같다.&lt;br /&gt;
외부 접속 –&amp;gt; Bastion Host –&amp;gt; Private Subnet&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;약간의 &lt;code class=&quot;highlighter-rouge&quot;&gt;문제&lt;/code&gt;가 있다하면 ssh 접속을 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;키 페어 관리&lt;/code&gt;인데,&lt;br /&gt;
내부 private subnet에 접속하기 위해 Bastion Host는 각 서브넷의&lt;br /&gt;
키 페어를 &lt;code class=&quot;highlighter-rouge&quot;&gt;가지고&lt;/code&gt; 있어야 한다.&lt;/p&gt;

&lt;p&gt;이런 경우, 관리자들이 적절한 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안 규칙&lt;/code&gt;을 세워 키 페어 관리를 해야한다.&lt;br /&gt;
그렇지 않으면 Bastion Host에 접속하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;모든&lt;/code&gt; private subnet에 접근이 &lt;code class=&quot;highlighter-rouge&quot;&gt;가능&lt;/code&gt;해,&lt;br /&gt;
그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;모두 public&lt;/code&gt;으로 만든 것이랑 별반 다름이 없을 수 있기 때문이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. NAT(Network Access Translation)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;는 설명했듯이, 인터넷 게이트웨이를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;outbound&lt;/code&gt;만 허용한다.&lt;br /&gt;
이는 AWS의 정책으로 외부에서 접근이 불가하다.&lt;/p&gt;

&lt;p&gt;설정하는 방법은 다음과 같이 두 가지 방법이 존재한다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;를 생성하여 설정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;게이트웨이&lt;/code&gt;로 생성하여 설정&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Elastic IP&lt;/code&gt;를 설정하며 &lt;code class=&quot;highlighter-rouge&quot;&gt;유료&lt;/code&gt; 서비스다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Elastic IP를 사용하는 경우, 서버 재부팅 시에도 IP가 고정된다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. ELB(Elastic Load Balancer)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;은 서비스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;를 검색 후, 좌측 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;로드밸런서&lt;/code&gt;에서 할 수 있다.&lt;br /&gt;
생성 시, 3개 중 하나를 고르라고 하는데 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Classic&lt;/code&gt;을 선택하면 된다.&lt;/p&gt;

&lt;p&gt;그 후 대략 다음의 단계에 따라서 구성한다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;본인의 VPC와 서브넷을 잘 선택&lt;/li&gt;
  &lt;li&gt;보안그룹 할당: &lt;code class=&quot;highlighter-rouge&quot;&gt;기존&lt;/code&gt;그룹에서 생성한 그룹 선택&lt;/li&gt;
  &lt;li&gt;EC2 인스턴스 추가: 이 단계에서 우리의 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; 인스턴스를 추가한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위와 같은 설정의 이점은 EC2에 ELB를 거치치 않고 들어오는 경우를 막는 것이다.&lt;br /&gt;
즉, prviate EC2에 웹 프로토콜로 접속 시, &lt;code class=&quot;highlighter-rouge&quot;&gt;ELB&lt;/code&gt;를 통해서 접근해야 한다. &lt;br /&gt;
이를 통해 다음과 같은 흐름으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Inbound&lt;/code&gt;를 설정할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ACL –&amp;gt; ELB –&amp;gt; EC2&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;ELB&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bastion Host&lt;/code&gt;를 제외한 나머지 subnet은 &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; 설정을 해야한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;또한 EC2는 다음과 같은 3가지 방법으로 구분이 되는데,&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;private IP&lt;/li&gt;
  &lt;li&gt;Public IP + address&lt;/li&gt;
  &lt;li&gt;Unique ID(Instance ID)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 중, 3번째 방법인 &lt;code class=&quot;highlighter-rouge&quot;&gt;유니크&lt;/code&gt;한 ID가 ELB에 제공되어야 밸런싱을 잘 해준다고 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id4&quot;&gt;4. Elastic IP(탄력적 IP)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;AWS에서 Elastic IP를 가지고 있지 않은 리소스의 경우,&lt;br /&gt;
재부팅 시 IP의 &lt;code class=&quot;highlighter-rouge&quot;&gt;변경&lt;/code&gt;이 일어난다.&lt;br /&gt;
이러한 현상을 막기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Elastic IP&lt;/code&gt;를 설정하면 IP가 &lt;code class=&quot;highlighter-rouge&quot;&gt;고정&lt;/code&gt;된다.&lt;/p&gt;

&lt;p&gt;이러한 서비스는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Floating&lt;/code&gt;되어 있다고 한다.&lt;br /&gt;
무슨 말이나면, 특정 객체에 묶여있는 것이 아니라&lt;br /&gt;
상황에 따라 이리 붙었다 저리 붙었다가 가능하다는 뜻이다.&lt;/p&gt;

&lt;p&gt;이러한 특징 때문에 특정 서비스가 &lt;code class=&quot;highlighter-rouge&quot;&gt;다운&lt;/code&gt;되면 Elastic IP를&lt;br /&gt;
다른쪽으로 붙여서 트래픽을 그 쪽으로 유도해 &lt;code class=&quot;highlighter-rouge&quot;&gt;장애&lt;/code&gt;에 대처할 수 있게 된다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;End-User에게 보여지는 IP는 &lt;code class=&quot;highlighter-rouge&quot;&gt;고정&lt;/code&gt;된 IP이기 때문이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;혹은 서비스를 이관할 때도 이 서비스를 이용하여&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;유동적&lt;/code&gt;으로 트래픽을 처리할 수 있게 된다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id5&quot;&gt;5. S3(Simple Storage Service)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_6_1.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;br /&gt;
S3는 VPC &lt;code class=&quot;highlighter-rouge&quot;&gt;외부&lt;/code&gt;에 존재하는 서비스로써 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bucket&lt;/code&gt; 단위로 구분하며,&lt;br /&gt;
AWS에서 S3 서비스를 검색하여 시작할 수 있으며 다음과 같은 특징이 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;S3는 내부적으로 2군데 더 &lt;code class=&quot;highlighter-rouge&quot;&gt;미러링&lt;/code&gt;을 한다.&lt;br /&gt;
현재 내 region에 1개 + 가장 가까운 region에 1개에 구성함으로써,&lt;br /&gt;
어떤식으로 장애가 나더라도 &lt;code class=&quot;highlighter-rouge&quot;&gt;대응&lt;/code&gt; 할 수 있는 구조이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S3는 외부에 보여지지 않으므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;버킷레벨&lt;/code&gt;로 권한을 설정하거나&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;파일레벨&lt;/code&gt;로 권한을 설정할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S3는 &lt;code class=&quot;highlighter-rouge&quot;&gt;스토리지&lt;/code&gt; 서비스 이므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;DB&lt;/code&gt;와의 연동은 &lt;code class=&quot;highlighter-rouge&quot;&gt;안된다&lt;/code&gt;.&lt;br /&gt;
즉 S3에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Static Data&lt;/code&gt;만 저장할 수 있다.&lt;br /&gt;
이러한 특징으로 인해, 서버사이드 언어를 저장하고 돌려도 &lt;code class=&quot;highlighter-rouge&quot;&gt;작동하지 않는다&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;S3는 &lt;code class=&quot;highlighter-rouge&quot;&gt;AZ&lt;/code&gt; 밖에 존재하게 되므로,&lt;br /&gt;
VPC 안에 있는 객체들과의 통신은 &lt;code class=&quot;highlighter-rouge&quot;&gt;과금&lt;/code&gt;을 유발하게 된다.&lt;br /&gt;
이 문제를 피하기 위해, S3에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;인증토큰&lt;/code&gt;을 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;허용된&lt;/code&gt; REST API만 받아주면 된다고 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id6&quot;&gt;6. 끝마치며&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;AWS에 대해서 배워볼까? 로 시작했던 시리즈의 포스팅이 끝났다.&lt;br /&gt;
단순하고 짧게 쓰려고 했지만, 쓰다보니 점점 길어지게 되었다.&lt;/p&gt;

&lt;p&gt;AWS는 늘 t2.micro 인스턴스 하나만 띡 만들어서 대충 써봤던게 전부였는데,&lt;br /&gt;
이번 기회로 새로운 눈이 뜨여지게 된 것 같다.&lt;/p&gt;

&lt;p&gt;배웠으니 앞으로 어딘가에 적용하기를 기대하고,&lt;br /&gt;
누군가에게 이 글이 도움이 되었길 바라며 포스팅을 마친다.&lt;/p&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">들어가기 앞서 본 포스팅에서는 다음과 같은 구성요소들을 살펴볼 예정이다. Private Subnet을 구성하는 방법 Bastion Host를 통해 Private Subnet에 접근하는 방법 NAT ELB Elastic IP S3</summary></entry><entry><title type="html">[AWS] EC2 인스턴스(실습)</title><link href="https://owin2828.github.io/devlog/2020/01/16/aws-5.html" rel="alternate" type="text/html" title="[AWS] EC2 인스턴스(실습)" /><published>2020-01-16T09:20:00+09:00</published><updated>2020-01-16T09:20:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/16/aws-5</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/16/aws-5.html">&lt;h2 id=&quot;id0&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이전 포스팅에서는 실제 인스턴스를 생성하기 전 기본적인 구성을 끝마쳤다.&lt;br /&gt;
본 편에서는 다음의 요소를 구성하고 설정할 예정이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;EC2&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. 키 페어 생성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_1.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;인스턴스 생성하기 전, 인증에 사용되는 키 페어를 만들기 위해&lt;br /&gt;
사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;를 검색하여 이동한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_2.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측의 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;키 페어&lt;/code&gt;를 클릭 후, 키 페어 생성을 눌러 생성한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_3.png&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;규칙&lt;/code&gt;에 따라 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;keypair-apne2-dev-public&lt;/code&gt;으로 이름을 지정 후,&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;을 누른다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_4.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;키 페어&lt;/code&gt;가 생성됨이 확인되고, &lt;code class=&quot;highlighter-rouge&quot;&gt;다운로드&lt;/code&gt;가 시작이 된다.
    &lt;blockquote&gt;
      &lt;p&gt;이때 생성되는 키 페어는 &lt;code class=&quot;highlighter-rouge&quot;&gt;단 한번&lt;/code&gt;만 다운로드가 가능하므로, 주의하자&lt;br /&gt;
잃어버릴 시, 키 페어를 &lt;code class=&quot;highlighter-rouge&quot;&gt;새로&lt;/code&gt; 생성해야 한다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;하나의 키 페어로 모든 인스턴스에 적용하는 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;매우 위험&lt;/code&gt;하다.&lt;br /&gt;
따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;적절한 보안 규칙&lt;/code&gt;을 세워 키 페어를 &lt;code class=&quot;highlighter-rouge&quot;&gt;관리&lt;/code&gt;해야한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. 인스턴스(EC2) 생성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_5.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측의 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;를 클릭 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;을 클릭한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-1&quot;&gt;2-1. AMI 선택&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_6.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사진처럼 맨 위의 &lt;code class=&quot;highlighter-rouge&quot;&gt;AMI&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;선택&lt;/code&gt;한다.
    &lt;blockquote&gt;
      &lt;p&gt;선택된 이미지는 아마존에서 지원하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;기본&lt;/code&gt; 이미지이다.&lt;br /&gt;
또한, 사진 좌측의 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Marketplace&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;커뮤티니 AMI&lt;/code&gt;등에서&lt;br /&gt;
여러가지 옵션으로 준비된 이미지를 선택할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-2&quot;&gt;2-2. 인스턴스 유형 선택&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_7.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;우리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;프리티어&lt;/code&gt;를 사용하므로, 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;녹색&lt;/code&gt;으로 표시된 &lt;code class=&quot;highlighter-rouge&quot;&gt;t2.micro&lt;/code&gt;를 선택한다.
    &lt;blockquote&gt;
      &lt;p&gt;여기서 유형 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;가 붙는 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;개발용&lt;/code&gt;이거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;테스트용&lt;/code&gt;이라는 의미이다.&lt;br /&gt;
또한 t뒤에 &lt;code class=&quot;highlighter-rouge&quot;&gt;숫자&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;세대&lt;/code&gt;를 의미하며 클수록 최신이다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;선택을 하였다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;다음: 인스턴스 세부 정보 구성&lt;/code&gt;을 눌러 진행한다.
    &lt;blockquote&gt;
      &lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;검토 및 시작&lt;/code&gt;을 누르게되면 우리가 원하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;구성을 진행할 수 &lt;code class=&quot;highlighter-rouge&quot;&gt;없다&lt;/code&gt;.&lt;br /&gt;
그러므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;주의&lt;/code&gt;해서 진행하도록 하자.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-3&quot;&gt;2-3. 인스턴스 구성&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_8.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사진의 첫 번째 빨간 사각형에서 다음과 같은 설정을 진행한다.
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;네트워크&lt;/code&gt;는 기본 VPC로 선택이 되어있는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;우리가 만든 VPC&lt;/code&gt;를 선택한다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷&lt;/code&gt;은 우리가 인스턴스를 생성할 서브넷을 지정해준다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭 IP 자동할당&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;활성화&lt;/code&gt;를 해준다.
        &lt;blockquote&gt;
          &lt;p&gt;외부와 통신하는 서비스는 활성화를 해줘야한다.&lt;br /&gt;
  서비스를 재실행시, Public IP는 &lt;code class=&quot;highlighter-rouge&quot;&gt;고정&lt;/code&gt;되지만, Private IP는 &lt;code class=&quot;highlighter-rouge&quot;&gt;변경&lt;/code&gt;되기 때문이다.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;두 번째 사각형에서는 다음과 같은 설정을 진행한다.
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;종료 방지 기능 활성화&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;체크&lt;/code&gt;하여준다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;모니터링&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;활성화&lt;/code&gt;하는 것을 권장한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;위의 설정이 되었다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;다음&lt;/code&gt;을 눌러 진행한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-4&quot;&gt;2-4. 스토리지 &amp;amp; 추가&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;딱히 수정할 사항은 &lt;code class=&quot;highlighter-rouge&quot;&gt;없으므로&lt;/code&gt; 다음을 눌러 진행한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-5&quot;&gt;2-5. 보안 그룹 구성&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;보안그룹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;이름&lt;/code&gt;을 참조하여 기존에 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성한&lt;/code&gt; 그룹을 선택한다.&lt;br /&gt;
하단에 표시되는 프로토콜 규칙을 확인 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;검토 및 시작&lt;/code&gt;을 누른다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-6&quot;&gt;2-6. 검토&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;화면에 표시되는 정보들을 확인하여 제대로 설정되었는지 검토 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;시작하기&lt;/code&gt;를 누르면&lt;br /&gt;
사진과 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;키 페어&lt;/code&gt; 선택화면이 표시된다.&lt;/li&gt;
  &lt;li&gt;이때 &lt;code class=&quot;highlighter-rouge&quot;&gt;기존 키 페어&lt;/code&gt;를 선택하고, 체크박스에 &lt;code class=&quot;highlighter-rouge&quot;&gt;체크&lt;/code&gt;하여 시작한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id2-7&quot;&gt;2-7. 확인&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;제대로 설정이 되었는지 확인하기 위해 빨간 사각형들을 살펴본다.
    &lt;ol&gt;
      &lt;li&gt;인스턴스 상태: 생성 직후는 &lt;code class=&quot;highlighter-rouge&quot;&gt;노란색&lt;/code&gt;으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Pending&lt;/code&gt;이라 표시되지만 당황하지 말자.&lt;br /&gt;
  아직 &lt;code class=&quot;highlighter-rouge&quot;&gt;준비 중&lt;/code&gt;이라는 뜻이며, 곧 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;초록색&lt;/code&gt;으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;running&lt;/code&gt;이 표시될 것이다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스 ID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;상태&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;유형&lt;/code&gt;을 확인한다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;가용영역&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안그룹&lt;/code&gt;이 제대로 설정되었는지 확인한다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;키 페어 이름&lt;/code&gt;을 확인한다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭 DNS&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭 IP&lt;/code&gt;를 확인한다.&lt;br /&gt;
  추후 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt;로 접속할 때 , 이 주소를 사용할 것인다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;가 제대로 할당되었는지 확인한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. 인스턴스(EC2) SSH 접속&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;새로 생성한 인스턴스에 접속하기 위해 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;연결&lt;/code&gt;을 눌러 가이드를 확인한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id3-1&quot;&gt;3-1. Mac &amp;amp; Linux&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;다운로드 받은 키 페어가 있는 디렉토리로 이동한다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;디렉토리위치&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;키 페어 파일의 &lt;code class=&quot;highlighter-rouge&quot;&gt;권한&lt;/code&gt;을 다음 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;변경&lt;/code&gt;한다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;400 keypair-apne2-dev-public.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt;를 이용해 다음 명령으로 접속한다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 가이드에서 제공하는 DNS로 접속하는 방법
 // 사진에서 제공하는 명령어를 그대로 사용하면 된다.  
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;keypair-apne2-dev-public.pem&quot;&lt;/span&gt; ec2-user@ec2-1X-XXX-XXX-XXX.ap-northeast-2.compute.amazonaws.com

 // 퍼블릭 IP를 이용해 접속하는 방법
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;keypair-apne2-dev-public.pem&quot;&lt;/span&gt; ec2-user@&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;본인의 퍼블릭 IP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;성공적으로 접속되었다면, 다음과 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;접속 허용 여부&lt;/code&gt;를 묻는 문구가 등장한다.&lt;br /&gt;
(&lt;code class=&quot;highlighter-rouge&quot;&gt;에러&lt;/code&gt; 발생시 6번으로)
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; The authenticity of host &lt;span class=&quot;s1&quot;&gt;'1X.XXX.XXX.XXX (1X.XXX.XXX.XXX)'&lt;/span&gt; can&lt;span class=&quot;s1&quot;&gt;'t be established.
 ECDSA key fingerprint is SHA256:+Kxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.
 Are you sure you want to continue connecting (yes/no)? yes
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;터미널 창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;를 입력해주면 다음과 같은 성공화면이 뜨게 된다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         __|  __|_  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
         _|  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;     /   Amazon Linux 2 AMI
         ___|&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;__|___|

 https://aws.amazon.com/amazon-linux-2/
 2 package&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; needed &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;security, out of 13 available
 Run &lt;span class=&quot;s2&quot;&gt;&quot;sudo yum update&quot;&lt;/span&gt; to apply all updates.
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ec2-user@ip-10-0-1-97 ~]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;만약 위 과정중 다음과 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;에러&lt;/code&gt;를 마주할 때 몇 가지 대안을 소개한다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ssh: connect to host 1X.XXX.XXX.XXX port 22: Connection timed out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;ssh용 &lt;code class=&quot;highlighter-rouge&quot;&gt;22번 포트&lt;/code&gt;가 열려있는지 확인&lt;/li&gt;
      &lt;li&gt;VPC - &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 테이블&lt;/code&gt; 설정에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;인터넷 게이트웨이&lt;/code&gt;의 설정 확인&lt;/li&gt;
      &lt;li&gt;VPC - &lt;code class=&quot;highlighter-rouge&quot;&gt;보안그룹&lt;/code&gt; 설정에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;인바운드 규칙&lt;/code&gt;을 클릭하여&lt;br /&gt;
 &lt;code class=&quot;highlighter-rouge&quot;&gt;규칙 편집&lt;/code&gt;을 눌러 소스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;내 ip&lt;/code&gt;를 눌러 갱신
        &lt;blockquote&gt;
          &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;핫스팟&lt;/code&gt; 환경등 접속한 IP가 &lt;code class=&quot;highlighter-rouge&quot;&gt;달라질&lt;/code&gt; 경우, 보안그룹의 설정을 &lt;code class=&quot;highlighter-rouge&quot;&gt;갱신&lt;/code&gt;해야한다.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;blockquote&gt;
      &lt;p&gt;그래도 안 될 경우, &lt;a href=&quot;https://owin2828.github.io/devlog/2020/01/15/aws-4.html&quot;&gt;이전 포스팅&lt;/a&gt;을 참고하여 차분히 하나씩 되짚어 보자.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;id3-2&quot;&gt;3-2. Window&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;윈도우&lt;/code&gt;의 경우 &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/putty.html&quot;&gt;여기&lt;/a&gt;를 확인하여 진행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Putty&lt;/code&gt;를 설치한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Puttygen&lt;/code&gt;을 이용하여 다운로드 받은 &lt;code class=&quot;highlighter-rouge&quot;&gt;.pem&lt;/code&gt; 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;.ppk&lt;/code&gt; 파일로 변환한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Host Name&lt;/code&gt;에 사진의 빨간 사각형의 정보를 붙여넣기 한다.&lt;br /&gt;
 &lt;img src=&quot;/img/aws/aws_5_15.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;br /&gt;
 &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Connection(연결) - SSH - &lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt;를 클릭하여 변경한 &lt;code class=&quot;highlighter-rouge&quot;&gt;.ppk&lt;/code&gt;파일을 넣어준다.&lt;br /&gt;
 &lt;img src=&quot;/img/aws/aws_5_17.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;br /&gt;
 &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Open&lt;/code&gt;을 눌러 접속을 진행하면 mac &amp;amp; linux의 경우와 동일하게 접속에 성공한다.&lt;/li&gt;
  &lt;li&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;에러&lt;/code&gt;가 발생하거나, 접속이 안된다면, 위의 mac &amp;amp; linux 6번을 참조한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이로써 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;를 하나 생성하고, 각종 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정&lt;/code&gt;들을 한 뒤 실제 인스턴스 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;를 만들어 보았다.&lt;br /&gt;
생성한 EC2 인스턴스는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bastion Host&lt;/code&gt; 역할을 하는 인스턴스로써,&lt;br /&gt;
VPC 내부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Private&lt;/code&gt; 서브넷들을 관리하는 역할을 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id4&quot;&gt;4. Public subnet을 통한 Apache 서버 구축&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bastion Host&lt;/code&gt;도 생성하였으니, 이번에는 간단한 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹 서버&lt;/code&gt; 역할을 하는 인스턴스를 생성한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;동일한 방식&lt;/code&gt;으로 다음 조건의 서브넷과 인스턴스를 하나 더 생성한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;VPC: &lt;code class=&quot;highlighter-rouge&quot;&gt;동일&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Subnet
    &lt;ul&gt;
      &lt;li&gt;이름: &lt;code class=&quot;highlighter-rouge&quot;&gt;subnet-apne2c-dev-web&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Routing Table
    &lt;ul&gt;
      &lt;li&gt;이름: &lt;code class=&quot;highlighter-rouge&quot;&gt;rt-apne2-dev-web&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;인터넷 게이트웨이: 기존 것과 &lt;code class=&quot;highlighter-rouge&quot;&gt;동일&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Security Group
    &lt;ul&gt;
      &lt;li&gt;이름: &lt;code class=&quot;highlighter-rouge&quot;&gt;sg_apne2_dev_web&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;EC2(web server instance)
    &lt;ul&gt;
      &lt;li&gt;이름: &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2-apne2c-dev-web&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;키 페어: 기존 것과 &lt;code class=&quot;highlighter-rouge&quot;&gt;동일&lt;/code&gt;
        &lt;blockquote&gt;
          &lt;p&gt;실제 개발을 진행할 때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;규칙&lt;/code&gt;을 정하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;다른&lt;/code&gt; 키 페어로 하자.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;성공적으로 생성하였다면, 새로 생성한 인스턴스에 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; 접속을 하여 다음 명령을 실행한다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;httpd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start httpd
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;sudo yum update 명령어를 사용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;꽤&lt;/code&gt; 시간이 걸리는데 당황하지말고 그대로 두자.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;다음과 같은 화면이 나오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;정상&lt;/code&gt; 실행이 된 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_5_18.png&quot; alt=&quot;아파치 웹서버를 구축한 모습&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id5&quot;&gt;끝마치며&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이로써 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt; 구성부터 시작해 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;의 구성까지 길었던 과정이 끝났다.&lt;/p&gt;

&lt;p&gt;간단하게 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bastion Host&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Web Server&lt;/code&gt;를 구축하여 ssh 접속까지 해보았다.&lt;br /&gt;
실습에서 전부 다루지 못했던 부분은 다음과 같은데,&lt;br /&gt;
이어지는 포스팅에서 추가 설명으로 대체하겠다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Private Subnet&lt;/code&gt;을 구성하는 방법&lt;/li&gt;
  &lt;li&gt;Bastion Host를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Private Subnet&lt;/code&gt;에 접근하는 방법&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ELB&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Elastic IP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S3&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">들어가기 앞서 이전 포스팅에서는 실제 인스턴스를 생성하기 전 기본적인 구성을 끝마쳤다. 본 편에서는 다음의 요소를 구성하고 설정할 예정이다. EC2</summary></entry><entry><title type="html">[AWS] VPC 만들어보기(실습)</title><link href="https://owin2828.github.io/devlog/2020/01/15/aws-3.html" rel="alternate" type="text/html" title="[AWS] VPC 만들어보기(실습)" /><published>2020-01-15T09:31:00+09:00</published><updated>2020-01-15T09:31:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/15/aws-3</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/15/aws-3.html">&lt;h2 id=&quot;id0&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이번 포스팅은 aws에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;를 구축해보는 &lt;code class=&quot;highlighter-rouge&quot;&gt;실습(?)&lt;/code&gt;에 관련된 포스팅이다.&lt;br /&gt;
깊게 들어가지는 않고 간단하게 VPC를 구성하는 방법을 써 볼 예정이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;앞으로 이어질 모든 실습 내용에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;이름&lt;/code&gt; 만큼은 &lt;code class=&quot;highlighter-rouge&quot;&gt;직관적&lt;/code&gt;이고 &lt;code class=&quot;highlighter-rouge&quot;&gt;확실&lt;/code&gt;하게 지어주자&lt;br /&gt;
이름만 보고도, 해당 객체가 어떤 일을 수행하는지 알 수 있어야 실수를 방지한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;진행되는 모든 &lt;code class=&quot;highlighter-rouge&quot;&gt;Naming Rule&lt;/code&gt;은 다음을 따른다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object 이름&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;Region-code&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;AZ-code&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;서비스 약칭(dev, stg, prod)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;본 예제에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Single AZ&lt;/code&gt;만을 사용하므로, 중간 AZ-code가 &lt;code class=&quot;highlighter-rouge&quot;&gt;생략&lt;/code&gt;될 예정이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;마지막으로, 모든 사진은 클릭 시, &lt;code class=&quot;highlighter-rouge&quot;&gt;확대&lt;/code&gt;기능을 제공한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. AWS 계정 생성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;다음의 링크로 접속하여 aws 홈페이지에 들어가보자.&lt;br /&gt;
&lt;a href=&quot;https://aws.amazon.com/ko/&quot;&gt;https://aws.amazon.com/ko/&lt;/a&gt;&lt;br /&gt;
우측 상단에 aws 계정생성 버튼을 눌러 가입을 진행하면 된다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;가입할 때, 신용카드 정보를 입력을 하게 되는데 갑자기 &lt;code class=&quot;highlighter-rouge&quot;&gt;결제&lt;/code&gt;가 되었다고 놀라지 말자.&lt;br /&gt;
aws에서 결제가능한 카드인지 확인하기 위해 1$ 정도를 결제했다가 &lt;code class=&quot;highlighter-rouge&quot;&gt;취소&lt;/code&gt;하는 것이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. 콘솔 로그인&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_1.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;우측 상단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Management Console&lt;/code&gt;을 클릭하여 로그인을 진행하자.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_2.png&quot; alt=&quot;&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;지역은 &lt;code class=&quot;highlighter-rouge&quot;&gt;서울&lt;/code&gt;로 선택한다. &lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. VPC 생성&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_3.png&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;서비스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;를 검색후 클릭한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_4.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인에 성공하면 AWS Management Console 화면이 나타나고, &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;를 검색하여 클릭한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_5.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;기본 VPC&lt;/code&gt;가 1개 있음을 볼 수 있고, 해당 VCP에 관한 정보가 하단에 공개된다.&lt;br /&gt;
이제 좌측 상단의 VPC 생성을 클릭하여 새로운 VPC를 만든다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_6.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;VPC를 생성할 때는, 앞서 설명한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Naming Rule&lt;/code&gt;을 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;vpc-apne2-dev-test&lt;/code&gt;로 작성한다.&lt;br /&gt;
CIDR블록은 특별한 경우가 아니면, 가이드대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;10.0.0.0/16&lt;/code&gt;으로 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2016년 6월 1일부터 &lt;code class=&quot;highlighter-rouge&quot;&gt;App Store&lt;/code&gt;에 배포되는 모든 앱은 &lt;code class=&quot;highlighter-rouge&quot;&gt;IPv6&lt;/code&gt; 네트워크를 지원해야 한다. &lt;br /&gt;
IPv6가 지원이 안 될 경우 배포가 안된다고 하니, 필요시 체크를 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_7.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;방금 우리가 작성한 이름을 가진 이름으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;가 하나 생성되었음을 확인 할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_8.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;마지막으로 방금 생성한 VPC를 &lt;code class=&quot;highlighter-rouge&quot;&gt;우클릭&lt;/code&gt; 후, 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS 호스트 이름 편집&lt;/code&gt;을 눌러준다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_9.png&quot; alt=&quot;&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;기본 값은 비활성화지만, DNS 호스트 이름을 &lt;code class=&quot;highlighter-rouge&quot;&gt;활성화&lt;/code&gt;하여 이름을 주도록 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;여기까지 진행 함으로써, 기본적인 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;구성은 완료되었다.&lt;br /&gt;
다음으로 구성된 VPC에 대해 기본요소들을 살펴보자.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id4&quot;&gt;4. 기본구성 살펴보기&lt;/h2&gt;
&lt;hr /&gt;

&lt;h4 id=&quot;id4-1&quot;&gt;4-1. 서브넷&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷&lt;/code&gt;을 클릭하면, 사진처럼 기본적으로 구성되어있는 총 3개의 서브넷이 확인 가능하다.&lt;br /&gt;
이때 각 서브넷은 서울 지역에 존재하는 AZ3개(a,b,c)에 하나씩 꾸려진 모습이다.
    &lt;blockquote&gt;
      &lt;p&gt;이 서브넷은 우리가 구성한 VPC가 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;기본 VPC&lt;/code&gt;에 존재하는 것으로 수정하지 말자.&lt;br /&gt;
아직 우리는 어떠한 서브넷도 생성하지 않았다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id4-2&quot;&gt;4-2. 라우팅 테이블&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;다음으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 테이블&lt;/code&gt;을 클릭하면,&lt;br /&gt;
사진에서 보이는 바와 같이 방금 생성한 VPC에 할당된 라우팅 테이블이 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;되었음을 알 수 있다.&lt;br /&gt;
(사진속 빨간 사각형 안에 우리가 정한 이름으로된 VPC에 할당되어있다.)&lt;br /&gt;
앞으로는 이 VPC의 라우팅 테이블에 규칙을 추가하며 각종 &lt;code class=&quot;highlighter-rouge&quot;&gt;네트워크 규칙&lt;/code&gt;을 설정할 것이다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id4-3&quot;&gt;4-3. 인터넷 게이트웨이&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;인터넷 게이트웨이&lt;/code&gt; 또한 아직 생성된 것이 없어 기본 VPC에 부착된것만 보인다.&lt;br /&gt;
인터넷 게이트웨이는 기본적으로 VPC 내부 요소들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;외부&lt;/code&gt;와 통신하는 징검다리 역할을 한다.
    &lt;blockquote&gt;
      &lt;p&gt;이 인터넷 게이트웨이를 생성하여 우리가 생성한 VPC에 붙여줘야 비로소 &lt;code class=&quot;highlighter-rouge&quot;&gt;통신&lt;/code&gt;이 가능해지는 것이다.&lt;br /&gt;
다음 글에서는 이러한 게이트웨이 생성 및 설정법을 다룰 것이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id4-4&quot;&gt;4-4. ACL&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ACL&lt;/code&gt;을 눌러보면 사진처럼 우리가 생성한 VPC에 할당된 ACL을 확인할 수 있다.
    &lt;blockquote&gt;
      &lt;p&gt;아직은 어떠한 서브넷을 생성하지 않아, 연결된 서브넷이 &lt;code class=&quot;highlighter-rouge&quot;&gt;없음&lt;/code&gt;이 확인된다.&lt;br /&gt;
주로 ACL의 설정은 건드리지 않으며, 더 세밀한 설정이 되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안그룹&lt;/code&gt;의 설정을 변경한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id4-5&quot;&gt;4-5. 보안그룹&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_3_14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;보안그룹&lt;/code&gt;을 확인해보면, 사진의 빨간 사각형 부분에 방금 만든 VPC ID로 설정되었음이 확인된다.
    &lt;blockquote&gt;
      &lt;p&gt;이 보안그룹의 &lt;code class=&quot;highlighter-rouge&quot;&gt;인바운드&lt;/code&gt; 설정을 변경하여 앞으로 진행할 것이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id5&quot;&gt;끝마치며&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;여태 진행한 과정을 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;를 하나 설정하고 기본요소들에 대하여 살펴보았다.&lt;br /&gt;
이는 서울 Region 내에 나만의 &lt;code class=&quot;highlighter-rouge&quot;&gt;IDC&lt;/code&gt;가 하나 생긴것과 마찬가지이다.&lt;/p&gt;

&lt;p&gt;다음 포스팅에서는 각 기본요소들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정&lt;/code&gt;하는 방법 및 서브넷 &amp;amp; 인스턴스 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;과&lt;br /&gt;
실제로 우리가 생성한 서브넷의 인스턴스에 접속하는 방법을 설명하겠다.&lt;/p&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">들어가기 앞서 이번 포스팅은 aws에서 VPC를 구축해보는 실습(?)에 관련된 포스팅이다. 깊게 들어가지는 않고 간단하게 VPC를 구성하는 방법을 써 볼 예정이다.</summary></entry><entry><title type="html">[AWS] 서브넷, 라우팅 테이블, 보안그룹, 인터넷 게이트웨이(실습)</title><link href="https://owin2828.github.io/devlog/2020/01/15/aws-4.html" rel="alternate" type="text/html" title="[AWS] 서브넷, 라우팅 테이블, 보안그룹, 인터넷 게이트웨이(실습)" /><published>2020-01-15T09:31:00+09:00</published><updated>2020-01-15T09:31:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/15/aws-4</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/15/aws-4.html">&lt;h2 id=&quot;id0&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이전 포스팅에 이어서 AWS에서 VPC를 구성 후,&lt;br /&gt;
다음의 구성 요소들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;하거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;설정&lt;/code&gt;하는 방법에 대해 포스팅할 예정이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Internet Gateway&lt;/li&gt;
  &lt;li&gt;Subnet&lt;/li&gt;
  &lt;li&gt;ACL&lt;/li&gt;
  &lt;li&gt;Security Group&lt;/li&gt;
  &lt;li&gt;Routing Table&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. 인터넷 게이트웨이 생성 및 설정&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_1.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측의 인터넷 게이트웨이 생성 버튼을 눌러&lt;br /&gt;
기본 인터넷 게이트 웨이는 두고 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;을 진행한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_2.png&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;생성하는 인터넷 게이트웨이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Naming Rule&lt;/code&gt;을 따라 사진처럼 명명한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_3.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;성공적으로 생성하게되면, 사진처럼 우리가 지정한 ID의 정보를 보여주며 상태는 &lt;code class=&quot;highlighter-rouge&quot;&gt;detached&lt;/code&gt;가 된다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_19.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;이때, 마우스 우클릭을 하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;VCP에 연결&lt;/code&gt;을 누른다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_20.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;우리가 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;를 클릭한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;연결&lt;/code&gt;을 누른다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_21.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;다시 상태를 확인해 보면, &lt;code class=&quot;highlighter-rouge&quot;&gt;attached&lt;/code&gt;로 변경되었음을 확인할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. 서브넷 생성 및 설정&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_4.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;마찬가지 방법으로 서브넷을 클릭 후,&lt;br /&gt;
기본 VPC에 할당된 3개의 서브넷은 그대로 두고 &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷 생성&lt;/code&gt;을 눌러준다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_5.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이름은 규칙에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;subnet-apne2-dev-ssh&lt;/code&gt;라 입력한다.&lt;br /&gt;
추후, 이 서브넷은 ssh로 접속하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;bastion&lt;/code&gt;으로 사용할 것이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VPC는 드롭박스를 클릭하면 사진처럼 뜨게 되는데,&lt;br /&gt;
그 중 전 포스팅에서 만든 VPC를 클릭해 주면된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CIDR 블록은 VPC CIDR 블록 &lt;code class=&quot;highlighter-rouge&quot;&gt;범위 내&lt;/code&gt;에서 생성하면 된다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;: 10.0.0.0/16&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷&lt;/code&gt;: 10.0.1.0./24&lt;br /&gt;
같은 방식으로 VPC내부에 존재하도록 지정하며,&lt;br /&gt;
3번째 숫자가 적어질수록 &lt;code class=&quot;highlighter-rouge&quot;&gt;security&lt;/code&gt;가 높아지게 cidr블록을 설정한다.&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;현재 사진에서는 편의상 1로 지정했지만, 실제로 생성할 때는 다음같은 나름의 &lt;code class=&quot;highlighter-rouge&quot;&gt;규칙&lt;/code&gt;을 적용하자.  &lt;br /&gt;
10.0.1.0/16 ~10.0.99.0/16 : &lt;code class=&quot;highlighter-rouge&quot;&gt;내부&lt;/code&gt; 통신&lt;br /&gt;
10.0.100.0/16 ~10.0.199.0/16: &lt;code class=&quot;highlighter-rouge&quot;&gt;외부&lt;/code&gt; 통신&lt;br /&gt;
같이 설정하여, IP만 보고도 &lt;code class=&quot;highlighter-rouge&quot;&gt;security&lt;/code&gt; 정도를 알 수 있도록 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_6.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;성공적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;하였다면, 사진의 빨간 사각형처럼 우리가 명명한 이름으로 등록되며,&lt;br /&gt;
우리가 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;에 할당되었음을 확인할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. ACL 확인&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_7.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;서브넷까지 생성한 후, 좌측 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ACL&lt;/code&gt;을 클릭하면 사진과 같이 새로 추가 되었음이 확인된다.&lt;br /&gt;
빨간 사각형 부분을 보면, 우리가 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;에 적용됨을 알 수 있다.
    &lt;blockquote&gt;
      &lt;p&gt;ACL 설정은 변경할 것도, 추가할 것도 없으므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;확인&lt;/code&gt;만 하자.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id4&quot;&gt;4. 보안그룹 생성 및 설정&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_8.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안그룹&lt;/code&gt;을 클릭하면, 사진처럼 2가지가 존재한다.&lt;br /&gt;
하나는 기본 VPC용, 다른 하나는 우리가 만든 VPC용이다.
    &lt;blockquote&gt;
      &lt;p&gt;우리는 서브넷별로 다른 보안그룹을 할당할 것이므로 새로 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;을 하자.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_9.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사진처럼 규칙에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;sg_apne2_dev_ssh&lt;/code&gt;로 이름을 작성한다.
    &lt;blockquote&gt;
      &lt;p&gt;이때 이름에 하이픈’&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;‘이 존재하면 생성이 되지 않으므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;주의&lt;/code&gt;하자.&lt;br /&gt;
(이유는 모르겠다.. 연산자라 그런지도)&lt;br /&gt;
여태는 다 하이픈을 사용했으나.. 이번에만 언더바’&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;‘를 사용하도록 한다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;설명에는 본인이 알아볼 수 있도록 작성하면 된다.
    &lt;blockquote&gt;
      &lt;p&gt;위와 비슷한 이유로 설명에 &lt;code class=&quot;highlighter-rouge&quot;&gt;한글&lt;/code&gt;이 들어가면 안된다고 발광을 하니 &lt;code class=&quot;highlighter-rouge&quot;&gt;주의&lt;/code&gt;하자.&lt;br /&gt;
사실 설명 없이도 한 눈에 알아볼 수 있는 이름이 &lt;code class=&quot;highlighter-rouge&quot;&gt;중요&lt;/code&gt;하다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;마지막으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;는 우리가 생성한 VPC를 선택하여 준다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_10.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;성공적으로 생성했다면, 사진처럼 우리가 정한 &lt;code class=&quot;highlighter-rouge&quot;&gt;이름&lt;/code&gt;으로 생성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;에&lt;br /&gt;
알맞은 &lt;code class=&quot;highlighter-rouge&quot;&gt;설명&lt;/code&gt;으로 생성됨이 확인된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이때, 방금 작성한 보안그룹을 클릭 후 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;인바운드 규칙&lt;/code&gt;을 누른 후,&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;규칙 편집&lt;/code&gt;을 클릭한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_11.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;규칙 추가&lt;/code&gt;를 눌러 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH&lt;/code&gt;를 추가해준다.&lt;/li&gt;
  &lt;li&gt;이때 &lt;code class=&quot;highlighter-rouge&quot;&gt;소스&lt;/code&gt;는 특별한 경우가 아니면 &lt;code class=&quot;highlighter-rouge&quot;&gt;내 IP&lt;/code&gt;로 지정한다.&lt;br /&gt;
(혹은 직접 &lt;code class=&quot;highlighter-rouge&quot;&gt;지정&lt;/code&gt;하여 선택할 수도 있다.)
    &lt;blockquote&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;위치 무관&lt;/code&gt;으로 지정하는 순간 엄청난 &lt;code class=&quot;highlighter-rouge&quot;&gt;공격&lt;/code&gt;을 받게 될 것이다.&lt;br /&gt;
실제 내 지인 또한 이 설정을 하지 않아 &lt;code class=&quot;highlighter-rouge&quot;&gt;과금&lt;/code&gt;된 사례가 있었다.&lt;br /&gt;
이러한 경우 AWS에 문의하면 로그를 확인하고, 과금을 &lt;code class=&quot;highlighter-rouge&quot;&gt;취소&lt;/code&gt;해준다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_12.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;규칙을 추가한다면, 사진처럼 두 가지 프로토콜에 대한 &lt;code class=&quot;highlighter-rouge&quot;&gt;인바운드&lt;/code&gt; 규칙이 생긴다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id5&quot;&gt;5. 라우팅 테이블 생성 및 설정&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_13.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;좌측 메뉴에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 테이블&lt;/code&gt;을 클릭한 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 테이블 생성&lt;/code&gt;을 클릭한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_14.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;규칙에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;rt-apne2-dev-ssh&lt;/code&gt; 이름을 선택 후,&lt;br /&gt;
우리가 생성한 VPC를 선택하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;생성&lt;/code&gt;한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_15.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;생성한 라우팅 테이블을 선택하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷 연결&lt;/code&gt;을 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷 연결 편집&lt;/code&gt;을 클릭한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_16.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;목록에서 우리가 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷&lt;/code&gt;을 선택 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;저장&lt;/code&gt;을 누른다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_17.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;명시적으로 우리가 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;서브넷&lt;/code&gt;과 연결되었다는 정보를 확인할 수 있고,&lt;br /&gt;
하단에도 정보가 노출된다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_18.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;다음으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 편집&lt;/code&gt;을 눌러준다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_22.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 추가&lt;/code&gt;를 누른 후, 왼쪽 대상에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;0.0.0.0/0&lt;/code&gt;을 입력하고, &lt;br /&gt;
오른쪽 대상에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Internet Gateway&lt;/code&gt;를 눌러준다.&lt;br /&gt;
그 후 왼쪽 검은 사각형처럼 정보가 노출되고, 우리가 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;인터넷 게이트웨이&lt;/code&gt;를 클릭하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;저장&lt;/code&gt;한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/aws/aws_4_23.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;등록 후, 사진처럼 연결한 &lt;code class=&quot;highlighter-rouge&quot;&gt;인터넷 게이트웨이&lt;/code&gt;가 표시된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;라우팅 테이블&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;인터넷 게이트웨이&lt;/code&gt; 포함 유무로 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;로 구분한다.
    &lt;blockquote&gt;
      &lt;p&gt;특정 서브넷을 라우팅 테이블에 추가하여 인터넷 게이트웨이를 붙히지 않으면&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;이 되는 것이다.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;이로써 &lt;code class=&quot;highlighter-rouge&quot;&gt;외부&lt;/code&gt;로 인터넷 게이트웨이를 통하여 통신할 준비가 완료 되었다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id6&quot;&gt;끝마치며&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이번 포스팅을 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Internet Gateway&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Subnet&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ACL&lt;/code&gt;,&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Security Group&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Routing Table&lt;/code&gt;등을 생성하고 설정하였다.&lt;/p&gt;

&lt;p&gt;어이지는 포스팅에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2 인스턴스&lt;/code&gt;를 생성하고,&lt;br /&gt;
VPC내부에 구성을 해보도록 하겠다.&lt;/p&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">들어가기 앞서 이전 포스팅에 이어서 AWS에서 VPC를 구성 후, 다음의 구성 요소들을 생성하거나 설정하는 방법에 대해 포스팅할 예정이다. Internet Gateway Subnet ACL Security Group Routing Table</summary></entry><entry><title type="html">[AWS] Region, AZ, VPC, Subnet등 구성</title><link href="https://owin2828.github.io/devlog/2020/01/10/aws-2.html" rel="alternate" type="text/html" title="[AWS] Region, AZ, VPC, Subnet등 구성" /><published>2020-01-10T14:15:00+09:00</published><updated>2020-01-10T14:15:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/10/aws-2</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/10/aws-2.html">&lt;h2 id=&quot;id0-1&quot;&gt;들어가기 앞서&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;기초적인 내용을 들어가기 전에 여담으로 aws 사용에 대한 이야기를 잠깐 하고 가겠다.&lt;/p&gt;

&lt;p&gt;퍼블릭 클라우드가 그러하듯이, aws 또한 모든것이 &lt;code class=&quot;highlighter-rouge&quot;&gt;가상화&lt;/code&gt; 되어있다.&lt;br /&gt;
이 말은 내가 신경쓰고 관리해야할 것이 &lt;code class=&quot;highlighter-rouge&quot;&gt;전혀 없다&lt;/code&gt;는 말이고 모든 것을 aws가 알아서 해주는 것이다.&lt;br /&gt;
하지만 이러한 이유로 &lt;code class=&quot;highlighter-rouge&quot;&gt;하드웨어적 장애&lt;/code&gt;가 생겼을 때, 반대로 내가 할 수 있는 것은 전혀 없다.&lt;/p&gt;

&lt;p&gt;무슨 말이냐면, 하드웨어적 결함으로 어떤 에러가 발생하였을 때&lt;br /&gt;
그게 내 문제인지, aws의 문제인지 &lt;code class=&quot;highlighter-rouge&quot;&gt;알지 못할&lt;/code&gt; 수도 있다는 의미이다.&lt;br /&gt;
생각보다 이러한 이유가 굉장히 &lt;code class=&quot;highlighter-rouge&quot;&gt;스트레스&lt;/code&gt; 받는 일이 된다고 우리팀의 시니어분께서 말씀해 주셨다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;실제로 어떤 기업의 세미나에서 aws 기반 서비스를 개발하던 중, 이런 &lt;code class=&quot;highlighter-rouge&quot;&gt;장애&lt;/code&gt;를 만나서 고생한 이야기를 들었다.&lt;br /&gt;
장애의 원인이 본인들의 문제인지, aws의 결함인지 알지 못하여 문의로 해결을 받기까지 고생한 이야기인데,&lt;br /&gt;
알 수 없는 에러와 싸우며 몇날 몇일을 고생했다고 하셨다..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;하지만 이런 단점에 비해 얻는 장점이 월등히 많으므로 전세계가 aws에 열광하는 것이 아닐까&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;각설하고 본격적으로 aws의 기초 구성에 대해 알아보도록 하자.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id0-2&quot;&gt;AWS Public Cloud의 구성&lt;/h2&gt;
&lt;hr /&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_2_1.jpg&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
  &lt;figcaption&gt;출처: &lt;a href=&quot;https://blog.leedoing.com/46&quot;&gt;https://blog.leedoing.com/46&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;AWS의 기본적인 &lt;code class=&quot;highlighter-rouge&quot;&gt;구성요소&lt;/code&gt;의 단위는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;region&lt;/li&gt;
  &lt;li&gt;AZ(Availability Zone)&lt;/li&gt;
  &lt;li&gt;VPC(Virtual Private Cloud)&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;id1&quot;&gt;1. region&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;구성요소 중 가장 큰 단위이며, 논리적인 단계이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;id2&quot;&gt;2. AZ(Availability Zone)&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;실제 IDC 단위로써, aws 정책에 따라 하나의 region안에는 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;2개 이상&lt;/code&gt;의 AZ가 존재한다고 한다.&lt;br /&gt;
(그림에서도 2개의 AZ가 존재한다.)&lt;br /&gt;
시스템을 구성할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;single AZ&lt;/code&gt;로 할 것인지, &lt;code class=&quot;highlighter-rouge&quot;&gt;multi AZ&lt;/code&gt;로 할 것인지는 사용자의 선택사항이다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;multi AZ로 구성하여 data들을 이원화하여 안전하게 보관하는 것도 하나의 방법이고,&lt;br /&gt;
Elastic Load Balancer를 통해 각각의 AZ가 다른 일을 수행하게 하는 것도 하나의 방법이다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;id3&quot;&gt;3. VPC(Virtual Private Cloud)&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;AZ 밑의 단위로써, &lt;code class=&quot;highlighter-rouge&quot;&gt;논리적인 구조&lt;/code&gt;로 하나의 IDC 처럼 동작한다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;약간 웃긴것이 분명 public 서비스인데, &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt;가 붙었다.&lt;br /&gt;
그 이유는 논리적인 하나의 IDC를 만들어서 개인이 사용할 수 있기 때문이라고 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;모든 리소스는 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC&lt;/code&gt;에 저장되며 한 region에 5개까지 VPC를 생성할 수 있다.(필요시 제한용량 해제 신청)&lt;br /&gt;
물론 VPC 없이도 서버를 생성할 수 있지만, 권장되지 않는다고 한다.&lt;/p&gt;

&lt;p&gt;계정을 생성하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;기본 VPC&lt;/code&gt;가 생성되고 그 안에 기본적인 구성요소들이 생성된다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;이 기본 VPC는 건들지 말자. 어떤 &lt;code class=&quot;highlighter-rouge&quot;&gt;에러&lt;/code&gt;들이 발생한다고 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_2_2.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
  &lt;figcaption&gt;출처: &lt;a href=&quot;https://cloudaffaire.com/create-a-vpc-interface-endpoint/&quot;&gt;https://cloudaffaire.com/create-a-vpc-interface-endpoint/&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;위 그림에서도 볼 수 있듯이, VPC의 구성은 다음과 같이 이루어진다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IGW&lt;/code&gt;(Internet Gate Way): 외부로 연결되는 인터넷 게이트웨이&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Subnet&lt;/code&gt;: VPC의 가장 &lt;code class=&quot;highlighter-rouge&quot;&gt;기본&lt;/code&gt;적인 하나의 단위로써, 각 서브넷은 public, private 중 설정이 가능&lt;br /&gt;
private은 외부에서 접속할 수도, 외부로 나갈 수도 없음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ACL&lt;/code&gt;: 서브넷의 설정을 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;방화벽&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Security Group&lt;/code&gt;: 서브넷 하나의 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안&lt;/code&gt;을 설정, 주로 ACL은 두고, SG를 설정하여 보안관리&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ELB&lt;/code&gt;(Elastic Load Balancing): 로드밸런싱과 보안 설정을 해줌&lt;br /&gt;
private 서브넷을 만들경우, 외부와 통신이 안되는데 이때 ELB를 사용해서 외부에서 접근하도록 설정&lt;br /&gt;
(&lt;code class=&quot;highlighter-rouge&quot;&gt;로드밸런싱&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;허용된 매서드&lt;/code&gt;만 접근이 가능해진다고 함)&lt;br /&gt;
ELB의 종류는 다음과 같이 3가지 존재
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Classic&lt;/code&gt;: 예전 방식&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Application&lt;/code&gt;: 도메인 하위 레벨(/users 등)에 따라 다르게 웹 서버에 구성하고 이를 밸런싱&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Network&lt;/code&gt;: 모든 프로토콜(http(s) + 커스터마이징 프로토콜)에 대해 밸런싱&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;id3-1&quot;&gt;3-1. Subnet과 EC2 인스턴스&lt;/h5&gt;
&lt;hr /&gt;
&lt;p&gt;하나의 VPC에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;여러개&lt;/code&gt;의 서브넷을 생성할 수 있다.(10.1.10.100 / 10.1.10.110 등..)&lt;br /&gt;
이때 ip를 구분하여 용도에 맞게 할당해 내부적으로 영역을 &lt;code class=&quot;highlighter-rouge&quot;&gt;구분&lt;/code&gt;한다.&lt;br /&gt;
(x.x.x.100대 이상은 외부통신, 미만은 내부통신 같은 방식)&lt;/p&gt;

&lt;p&gt;이렇게 만들어진 서브넷 하나에 만드는 서버를 우리가 아는 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;라고 한다.&lt;br /&gt;
오브젝트를 만들고 메모리에 올려 사용하는 것을 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;라 칭하므로,&lt;br /&gt;
가상화된 환경에 올려 사용자가 사용할 수 있도록 한 것을 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2 인스턴스&lt;/code&gt;라 부른다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;id3-2&quot;&gt;3-2. Bastion&lt;/h5&gt;
&lt;hr /&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_2_3.jpg&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;
  &lt;figcaption&gt;출처: &lt;a href=&quot;https://www.youtube.com/watch?v=edi1kyxznE0&quot;&gt;https://www.youtube.com/watch?v=edi1kyxznE0&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;VPC를 구성할 때, 내부 서브넷들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;전부 private&lt;/code&gt;으로 설정하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;하나만&lt;/code&gt; 관리용 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; 서브넷으로 설정한다.&lt;br /&gt;
이 public 서브넷으로 다른 private 서브넷들을 관리하며, 이러한 관리자를 &lt;code class=&quot;highlighter-rouge&quot;&gt;bastion&lt;/code&gt;이라 한다.&lt;br /&gt;
이런 방법을 사용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;SG&lt;/code&gt;(Security Group)을 설정해 &lt;code class=&quot;highlighter-rouge&quot;&gt;한정된 IP&lt;/code&gt;만 bastion에 접근하도록 허용해야 한다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;만약 전부 public으로 서브넷을 만든다면, 관리자 중 한 명만 퇴사해도 &lt;code class=&quot;highlighter-rouge&quot;&gt;모든&lt;/code&gt; 서브넷의 key를 갱신해야 한다.&lt;br /&gt;
매 번 이렇게 서브넷을 업데이트 할 수 없으므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;전부&lt;/code&gt; private으로 설정한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;id3-3&quot;&gt;3-3. NAT&lt;/h5&gt;
&lt;hr /&gt;
&lt;p&gt;하지만 문제는 여전히 존재한다. 전부 private으로 만들어 버렸으니, 각 서브넷의 외부와 통신이 안된다.&lt;br /&gt;
그럼 각 서브넷의 &lt;code class=&quot;highlighter-rouge&quot;&gt;OS 업데이트&lt;/code&gt;는 어떻게 하는가?&lt;/p&gt;

&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_2_4.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
  &lt;figcaption&gt;출처: &lt;a href=&quot;https://blog.2dal.com/2017/09/12/aws-vpc-basic/&quot;&gt;https://blog.2dal.com/2017/09/12/aws-vpc-basic/&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;정답은 하나의 서브넷을 public으로 설정 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;outbound&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;가능&lt;/code&gt;하게, &lt;code class=&quot;highlighter-rouge&quot;&gt;inbound&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;불가능&lt;/code&gt;하게 만들면 된다.&lt;br /&gt;
이런 역할을 &lt;code class=&quot;highlighter-rouge&quot;&gt;NAT&lt;/code&gt;이라 부르며 하나의 서브넷에 bastion과 NAT을 둘다 포함시킬 수도 있다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;이전에는 NAT 인스턴스를 생성해야 했으나, &lt;code class=&quot;highlighter-rouge&quot;&gt;NAT gateway&lt;/code&gt;를 생성하여 서브넷 안에 포함시키면 작동하도록 변경되었다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;id3-4&quot;&gt;3-4. Dev, Manage, Product VPC&lt;/h5&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;실제&lt;/code&gt; 개발 및 배포를 진행할 때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPC 구성&lt;/code&gt;을 어떻게 해야할까?&lt;br /&gt;
여러가지 방법이 있겠지만, aws는 &lt;code class=&quot;highlighter-rouge&quot;&gt;각 단계별&lt;/code&gt;로 VPC를 따로 구성하는 것을 추천한다.&lt;/p&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_2_5.png&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
  &lt;figcaption&gt;출처: &lt;a href=&quot;https://aws.amazon.com/ko/quickstart/architecture/compliance-uk-official/&quot;&gt;https://aws.amazon.com/ko/quickstart/architecture/compliance-uk-official/&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;위의 그림은 aws 공식 홈페이지에서 가져온 것인데, &lt;code class=&quot;highlighter-rouge&quot;&gt;Dev&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;Managemnet&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;Production&lt;/code&gt; 총 3단계로 구성되있다.&lt;br /&gt;
이렇게 Stage 별로 VPC를 따로 구성해서 관리하는 것이 복잡한 서브넷간 설정을 &lt;code class=&quot;highlighter-rouge&quot;&gt;피할 수 있기&lt;/code&gt; 때문이다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;물론 하나의 VPC 안에서 서브넷을 나눠 그룹별로 관리할 수도 있으나, 규모가 커졌을 때 서브넷간의 복잡한 설정으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;어려움&lt;/code&gt;이 따르게 된다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;id4&quot;&gt;4. S3(Simple Storgae Service)&lt;/h4&gt;
&lt;hr /&gt;
&lt;figure&gt;
&lt;p&gt;&lt;img src=&quot;/img/aws/aws_2_6.jpg&quot; alt=&quot;&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
  &lt;figcaption&gt;출처: &lt;a href=&quot;https://www.megazone.com/techblog_191113_aws-privatelink/&quot;&gt;https://www.megazone.com/techblog_191113_aws-privatelink/&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;S3는 단순하게는 하나의 &lt;code class=&quot;highlighter-rouge&quot;&gt;저장소&lt;/code&gt;이다.&lt;br /&gt;
하지만 활용법에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;효율적인&lt;/code&gt; 정보의 전달이 가능한데, 이는 S3가 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹서버&lt;/code&gt; 역할을 제공하기 때문이다.&lt;br /&gt;
이는 다음의 과정을 거쳐 이루어지게 된다.&lt;/p&gt;

&lt;p&gt;S3는 기본적으로 VPC 밖에 구성된 하나의 웹서버로써 이곳에 &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;정적인 파일&lt;/code&gt;을 주로 배치한다.&lt;br /&gt;
End-user에게는 이곳을 보도록 설정하고, user가 원하는 요청을 수행하도록 그 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;스크립트&lt;/code&gt;로 짜놓는다.&lt;br /&gt;
User가 해당 요청을 하게되면 스크립트가 &lt;code class=&quot;highlighter-rouge&quot;&gt;브라우저&lt;/code&gt;에서 실행되어, VPC를 거쳐 EC2까지 요청을 전송한다.&lt;br /&gt;
이러한 과정을 통해 User는 VPC를 신경쓸 필요없이 S3의 html로 &lt;code class=&quot;highlighter-rouge&quot;&gt;결과&lt;/code&gt;를 받을 수 있게 된다.&lt;/p&gt;

&lt;p&gt;이러한 방식은 사실상 업계의 &lt;code class=&quot;highlighter-rouge&quot;&gt;표준&lt;/code&gt;이라고 하며, 다른 오브젝트들이 이러한 S3호환 프로토콜을 제공한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;id5&quot;&gt;5. RDS(Relation DB Service)&lt;/h4&gt;
&lt;hr /&gt;
&lt;p&gt;하나의 서브넷을 구현하고, 그 안에 DB 서버를 구축하여 운영하는 것이 기존의 방식이었다면,&lt;br /&gt;
aws에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Paas&lt;/code&gt;의 일종인 &lt;code class=&quot;highlighter-rouge&quot;&gt;RDS&lt;/code&gt;를 이용하여 더 효율적인 관리를 할 수 있다.&lt;/p&gt;

&lt;p&gt;이는 aws가 DB의 업데이트, 설치, 운영 그리고 관리까지 지원하기 때문이며, 지원하는 엔진은 다음과 같다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;Oracle&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;SQL Server&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;PostgreSQL&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;MariaDB&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;Aurora(MySQL과 호환)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;또한 RDS에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Multi-AZ&lt;/code&gt; 옵션을 설정하면, 다른 AZ에 복제된 DB를 바로 사용할 수 있다.&lt;br /&gt;
주로 data를 백업하여 이원화하는 용도로 많이 쓰이게 된다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Aurora는 aws에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;자체 DB&lt;/code&gt;로써 장애발생 및 AZ를 이용한 자체복구등 추가 기능을 지원한다고 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id6&quot;&gt;끝마치며&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;aws의 기초에 대해 &lt;code class=&quot;highlighter-rouge&quot;&gt;유능하신 어떤 분&lt;/code&gt;께 배운 내용을 토대로 작성된 글이다.&lt;br /&gt;
인터넷을 찾아보면 훨씬 전문적이고 깊은 이해를 돕는 글들이 있지만,&lt;br /&gt;
이 포스팅의 목적은 최대한 &lt;code class=&quot;highlighter-rouge&quot;&gt;간단&lt;/code&gt;하게, &lt;code class=&quot;highlighter-rouge&quot;&gt;이해&lt;/code&gt;가 되도록 작성하는 것이었다.&lt;/p&gt;

&lt;p&gt;너무 긴 글이라 두개로 분리할까 고민했는데, 혹시 지치신 분들이 있다면 위로가 있기를…&lt;br /&gt;
다음에는 간단하게 AWS VPC를 구성하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;실습&lt;/code&gt;을 진행해 볼 예정이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이번 포스팅에는 사진에 달려있는 출처들이 reference 역할을 하기 때문에 따로 참조를 달지 않았다.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">들어가기 앞서 기초적인 내용을 들어가기 전에 여담으로 aws 사용에 대한 이야기를 잠깐 하고 가겠다.</summary></entry><entry><title type="html">[AWS] 퍼블릭 클라우드 vs 프라이빗 클라우드</title><link href="https://owin2828.github.io/devlog/2020/01/10/aws-1.html" rel="alternate" type="text/html" title="[AWS] 퍼블릭 클라우드 vs 프라이빗 클라우드" /><published>2020-01-10T10:55:00+09:00</published><updated>2020-01-10T10:55:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/10/aws-1</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/10/aws-1.html">&lt;h2 id=&quot;id0&quot;&gt;클라우드&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이제는 이 단어가 개발자가 아닌 주변 내 지인들에게도 전혀 낯설지 않은 단어가 되었다.&lt;br /&gt;
그만큼 &lt;code class=&quot;highlighter-rouge&quot;&gt;클라우드&lt;/code&gt;가 우리 일상에 가져오는 영향은 굉장히 크다고 할 수 있는데,&lt;br /&gt;
이번 시리즈에서 클라우드의 기본 개념과 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;의 기초개념 및 실습을 포스팅 하고자 한다.&lt;br /&gt;
시리즈의 시작으로 각 클라우드의 장단점 및 고려사항부터 써보고자 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;클라우드의 기본 개념과 기존에 정리가 잘 된 많은 글들이 있으니,&lt;br /&gt;
혹시 궁금한 것이 있다면 다른 글을 찾아보는 것을 추천합니다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id1&quot;&gt;Public Cloud&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;나같은 일반 개발자나, 기업을 대상으로 서비스를 제공하는 클라우드 인프라를 &lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭&lt;/code&gt; 클라우드라 한다.&lt;br /&gt;
클라우드 서비스를 제공하는 다양한 업체들(AWS, Google, MS, Alibaba, Naver)등은 가상환경 내의 서버를 임대해 준다.&lt;br /&gt;
이러한 클라우드 서비스는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Pay-as-you-go&lt;/code&gt;으로 사용한 만큼 과금하는 방식을 채택하며 별도의 하드웨어가 필요하지 않다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id2&quot;&gt;Private Cloud&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;하나의 조직에 전용 클라우드 환경을 제공하는 모델을 &lt;code class=&quot;highlighter-rouge&quot;&gt;프라이빗&lt;/code&gt; 클라우드라 한다.(VMware, OpenStack등)&lt;br /&gt;
사내 전용 클라우드로써, 각 조직이 더 효율적으로 관리할 수 있으나, 퍼블릭 클라우드에 비해 비용이 많이든다.&lt;br /&gt;
각 조직에 &lt;code class=&quot;highlighter-rouge&quot;&gt;on-premise&lt;/code&gt; 방식으로 적용될 수도 있고, 퍼블릭 클라우드 제공업체에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;off-premise&lt;/code&gt;로 호스팅 될 수도 있다.&lt;/p&gt;

&lt;p&gt;조달된 하드웨어와 가상화된 레이어 위에서 동작하기 때문에 시간이 절약되는 이점이 존재하지만,&lt;br /&gt;
HW 관리자 – 하이퍼바이저 관리자 – SW 관리자 이런식의 구성으로 인해 &lt;code class=&quot;highlighter-rouge&quot;&gt;하이퍼바이저&lt;/code&gt;의 관리가 또다른 &lt;code class=&quot;highlighter-rouge&quot;&gt;비용발생&lt;/code&gt;으로 다가올 수 있다.&lt;br /&gt;
또한 각 OS별로 라이센스를 일일히 구매해야 하므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;추가적인 비용&lt;/code&gt;이 발생할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;개인적인 의견으로는 일반 사기업이 하기에는 어렵지 않나 싶다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id3&quot;&gt;Hybrid Cloud&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;VPN등의 보안연결을 통해서 하나 이상의 퍼블릭 클라우드 + 프라이빗 클라우드 환경을 결합하는 방식이다.&lt;br /&gt;
두 개의 클라우드 간의 트래픽은 유동적으로 조정이 가능하여 유연한 대처가 가능하다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;프라이빗 클라우드에 많은 트래픽이 몰릴경우, 퍼블릭 클라우드로 &lt;code class=&quot;highlighter-rouge&quot;&gt;버스팅&lt;/code&gt;하여 유동적인 대처가 가능하다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id4&quot;&gt;앞으로&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;진행하게될 포스팅은 위에 언급한 것 중, 당연히 퍼블릭 클라우드인 &lt;code class=&quot;highlighter-rouge&quot;&gt;aws&lt;/code&gt;를 이용하여 진행할 예정이다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;무료&lt;/code&gt;로 사용해 볼 수 있고, 가장 대중적이며 개인이 작은 규모로 해보기에 가장 좋기 때문이다.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>owin2828</name></author><category term="aws" /><summary type="html">클라우드 이제는 이 단어가 개발자가 아닌 주변 내 지인들에게도 전혀 낯설지 않은 단어가 되었다. 그만큼 클라우드가 우리 일상에 가져오는 영향은 굉장히 크다고 할 수 있는데, 이번 시리즈에서 클라우드의 기본 개념과 AWS의 기초개념 및 실습을 포스팅 하고자 한다. 시리즈의 시작으로 각 클라우드의 장단점 및 고려사항부터 써보고자 한다.</summary></entry><entry><title type="html">[보안] 파일 업로드 취약점</title><link href="https://owin2828.github.io/devlog/2020/01/09/etc-2.html" rel="alternate" type="text/html" title="[보안] 파일 업로드 취약점" /><published>2020-01-09T14:56:00+09:00</published><updated>2020-01-09T14:56:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/09/etc-2</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/09/etc-2.html">&lt;h2 id=&quot;id1&quot;&gt;1. 파일 업로드 취약점이란&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;주로 게시판 등에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;파일 업로드&lt;/code&gt; 기능을 악용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;시스템 권한&lt;/code&gt;을 획득할 수 있는 취약점을 의미한다.&lt;br /&gt;
나처럼 보안에 대한 지식이 얕은 사람은 위의 문장이 생소하게 느껴질 것이기에, 다시 풀어 써본다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;악성 스크립트&lt;/code&gt;가 업로드 된 후, 서버상에서 스크립트를 실행하여 쉘을 획득하는 등의 행위로 서버를 &lt;code class=&quot;highlighter-rouge&quot;&gt;장악&lt;/code&gt;할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;즉, 흔히 말하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹쉘&lt;/code&gt;의 업로드를 통해 시스템의 권한을 장악한다는 이야기이다.&lt;br /&gt;
그렇다면 어떤 파일들이 웹에서 구동되는가? 웹 서버에서 실행 가능한 &lt;code class=&quot;highlighter-rouge&quot;&gt;확장자&lt;/code&gt;는 다음과 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;언어&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;확장자&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;asp, aspx&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;asp, aspx, htm, html, asa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;php&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;phtml, php, php3, php4, php5, inc, htm, html&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jsp, java&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jsp, jspx, jsw, jsv, jspf, htm, html&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;perl&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pl, pm, cgi, lib, htm, html&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;coldfusion&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cfm, cfml, cfc, dbm, htm, html&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;이러한 악성 파일이 업로드 된다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;접근권한&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;정보유출&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;악성코드 배포&lt;/code&gt; 등의 문제를 야기할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. 공격방법&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;이러한 취약점을 찾아 공격하는 방법은 크게 4가지 정도이다.&lt;/p&gt;

&lt;h5 id=&quot;id2-1&quot;&gt;2-1. 취약점 점검&lt;/h5&gt;
&lt;p&gt;가장 간단한 방법으로 다음과 같은 과정을 거친다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;파일 업로드시에 &lt;code class=&quot;highlighter-rouge&quot;&gt;확장자 제한&lt;/code&gt;이 없는지 확인하고,&lt;/li&gt;
  &lt;li&gt;업로드된 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;접근&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;실행&lt;/code&gt;이 가능한지 확인하여 공격하는 것이다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;id2-2&quot;&gt;2-2. Proxy 툴을 이용해 확장자 검사 우회 파일 업로드&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;파일타입 변조&lt;/code&gt;등의 우회공격을 통해 확장자 검사를 피하는 것을 의미한다.&lt;br /&gt;
업로드 시 파일의유형 정보를 알려주는 헤더 중, &lt;code class=&quot;highlighter-rouge&quot;&gt;Content-type&lt;/code&gt; 속성을 프록시를 이용해 우회하여 공격할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;자세한 사항은 다음 링크를 참조하시기를..&lt;br /&gt;
&lt;a href=&quot;https://bit.ly/2tIJ21w&quot;&gt;https://bit.ly/2tIJ21w&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;id2-3&quot;&gt;2-3. Null을 이용한 파일 업로드&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;널(%00)&lt;/code&gt;문자가 문자의 끝을 의미하기 때문에 특정 확장자를 &lt;code class=&quot;highlighter-rouge&quot;&gt;숨기기&lt;/code&gt; 위한 목적으로 사용될 수 있다.&lt;br /&gt;
해당 부분의 취약점은 내부 API를 호출할 때 발생될 가능성이 있다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;널바이트(%00)와 .jpeg확장자를 함께 접목하여 업로드하면 %00 다음의 문자열은 무시하게 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;언어&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;우회패턴&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;처리패턴&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;php&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;test.php%00.jpeg&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;test.php&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;asp&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;test.asp%00.jpeg&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;test.asp&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;jsp&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;test.jsp%00.jpeg&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;test.jsp&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;id2-4&quot;&gt;2-4. SQL Injection을 이용한 파일 업로드&lt;/h5&gt;
&lt;p&gt;2가지 정도의 방법이 존재하는데, 다음과 같다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;into outfile()&lt;/code&gt; 함수를 이용하여 웹서버에 파일을 생성할 수 있다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;MSSQL&lt;/code&gt;의 저장 프로시저(&lt;code class=&quot;highlighter-rouge&quot;&gt;xp_cmdshell&lt;/code&gt;)을 이용하여 echo와 » (파이프) 명령어를 통해 특정 파일에 삽입할 수 있다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. 방어방법&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;모든 부분을 전부 작성할 수는 없지만, 대략적으로 다음과 같은 방법을 통하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;기초&lt;/code&gt;적인 방어를 할 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;확장자 검사&lt;/li&gt;
  &lt;li&gt;대소문자 구분하지 않고 확장자 비교&lt;/li&gt;
  &lt;li&gt;특수문자가 포함된 경우 업로드 금지&lt;/li&gt;
  &lt;li&gt;업로드된 파일명, 확장자를 난수화하여 변경&lt;/li&gt;
  &lt;li&gt;업로드된 파일을 url 요청으로 직접 접근이 불가능한 위치에 저장&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;id4&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://4rgos.tistory.com/4&quot;&gt;https://4rgos.tistory.com/4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>owin2828</name></author><category term="etc" /><summary type="html">1. 파일 업로드 취약점이란 주로 게시판 등에서 파일 업로드 기능을 악용하여 시스템 권한을 획득할 수 있는 취약점을 의미한다. 나처럼 보안에 대한 지식이 얕은 사람은 위의 문장이 생소하게 느껴질 것이기에, 다시 풀어 써본다. 악성 스크립트가 업로드 된 후, 서버상에서 스크립트를 실행하여 쉘을 획득하는 등의 행위로 서버를 장악할 수 있다.</summary></entry><entry><title type="html">[CI/CD] Jenkins vs GitLabCI vs Travis</title><link href="https://owin2828.github.io/devlog/2020/01/09/cicd-1.html" rel="alternate" type="text/html" title="[CI/CD] Jenkins vs GitLabCI vs Travis" /><published>2020-01-09T13:13:00+09:00</published><updated>2020-01-09T13:13:00+09:00</updated><id>https://owin2828.github.io/devlog/2020/01/09/cicd-1</id><content type="html" xml:base="https://owin2828.github.io/devlog/2020/01/09/cicd-1.html">&lt;h2 id=&quot;id0&quot;&gt;이번 시리즈에서는&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CI/CD&lt;/code&gt; 환경을 구축하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;App&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;배포&lt;/code&gt;해보는 것이 목적이다.&lt;br /&gt;
이를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jenkins&lt;/code&gt;를 이용하여 앱을 빌드하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Code Deploy&lt;/code&gt;를 이용해 배포하는 환경을 구축할 것이다.&lt;/p&gt;

&lt;p&gt;본격적으로 시작하기 전에 CI/CD 파이프라인 구축을 위한 서비스들이 무엇이 있는지 살펴보고,&lt;br /&gt;
다음과 같은 솔루션들의 장단점을 분석하고자 한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Travis&lt;/li&gt;
  &lt;li&gt;GitLab CI&lt;/li&gt;
  &lt;li&gt;Jenkins&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id1&quot;&gt;1. Trvais&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/cicd/cicd_5_1.jpg&quot; alt=&quot;Travis 로고&quot; width=&quot;70%&quot; height=&quot;70%&quot; /&gt;&lt;br /&gt;
별도의 회사였으나, &lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;에서 인수하였다.(GitHub는 MS가 인수함)&lt;br /&gt;
오픈소스용 &lt;code class=&quot;highlighter-rouge&quot;&gt;무료&lt;/code&gt; travis.org와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Private Repo&lt;/code&gt;를 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;유료&lt;/code&gt; travis.com을 별도로 운영하고 있고, 내용은 동일하다.&lt;/p&gt;

&lt;h5 id=&quot;id1-1&quot;&gt;장점&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub&lt;/code&gt;와의 연동(그냥 깃허브 계정으로 로그인하며 된다.)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YML&lt;/code&gt; 파일을 통한 쉬운 설정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;다양한&lt;/code&gt; 래퍼런스&lt;/li&gt;
  &lt;li&gt;직접 서버를 운영할 필요 없이, Travis에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;알아서&lt;/code&gt; VM으로 호스팅해 줌&lt;/li&gt;
  &lt;li&gt;모든 job이 &lt;code class=&quot;highlighter-rouge&quot;&gt;독립&lt;/code&gt;적(서로 간의 영향을 받지 않음)&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;id1-2&quot;&gt;단점&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Jenkins에 비해 플러그인의 종류가 &lt;code class=&quot;highlighter-rouge&quot;&gt;적음&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;유료 서비스를 사용할 경우, 가격이 꽤 &lt;code class=&quot;highlighter-rouge&quot;&gt;비쌈&lt;/code&gt;(기본: 69$/month, 일반: 129$/month)&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id2&quot;&gt;2. GitLab CI&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/cicd/cicd_5_2.png&quot; alt=&quot;Gitlab CI 로고&quot; width=&quot;30%&quot; height=&quot;30%&quot; /&gt;&lt;br /&gt;
GitLab 서비스에 내장되어 있다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;On-Premise&lt;/code&gt; 방식으로 설치하여 사용할 수도 있고, &lt;code class=&quot;highlighter-rouge&quot;&gt;웹&lt;/code&gt; 서비스로 사용할 수도 있다.&lt;br /&gt;
GitLab CI만 &lt;code class=&quot;highlighter-rouge&quot;&gt;Runner&lt;/code&gt;를 직접 호스팅하여 사용할 수 있는데, 이를 통해 고성능 혹은 서비스에 트고하된 환경에서 실행할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Runner&lt;/code&gt;: repo로부터 소스코드를 받아 해당 스크립트를 돌리는 작업을 수행&lt;br /&gt;
GitLab의 경우&lt;code class=&quot;highlighter-rouge&quot;&gt;shared runner&lt;/code&gt;를 사용해서 계획적으로 돌릴 수 있다.&lt;br /&gt;
On-Premise 방식에서는 당연히 지원하고,&lt;br /&gt;
GitLab의 클라우드 서비스를 사용하는 경우에도, Runner만 &lt;code class=&quot;highlighter-rouge&quot;&gt;따로&lt;/code&gt; 운용할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;id2-1&quot;&gt;장점&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GitLab&lt;/code&gt;과의 손쉬운 연동&lt;/li&gt;
  &lt;li&gt;Runner가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Docker&lt;/code&gt; 컨테이너 기반이라, Docker 친화적임(Docker Repo 무료 제공)&lt;/li&gt;
  &lt;li&gt;UI가 쉽고 &lt;code class=&quot;highlighter-rouge&quot;&gt;간편함&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;모든 job이 &lt;code class=&quot;highlighter-rouge&quot;&gt;독립적&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;id2-2&quot;&gt;단점&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;역시나 Jenkins에 비해 플러그인의 종류가 &lt;code class=&quot;highlighter-rouge&quot;&gt;적음&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;모든&lt;/code&gt; job에 대해 artifact를 정의 및 업로드/다운로드를 해야함&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id3&quot;&gt;3. Jenkins&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/img/cicd/cicd_5_3.png&quot; alt=&quot;Jenkins 로고&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt; 기반의 오픈소스로 구성되어 있으며, CI계의 &lt;code class=&quot;highlighter-rouge&quot;&gt;아버지&lt;/code&gt;라 불린다.&lt;br /&gt;
제일 오래된 만큼 다양한 플러그인을 지원하며, 사용자도 관련 문서도 많이 존재한다.&lt;/p&gt;

&lt;h5 id=&quot;id3-1&quot;&gt;장점&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;무료&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;다양한 IDE를 지원하며, 커스터마이징이 다양&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;많은&lt;/code&gt; 사용자들을 보유하고 있고, 관련 문서가 &lt;code class=&quot;highlighter-rouge&quot;&gt;다양&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;호스팅을 &lt;code class=&quot;highlighter-rouge&quot;&gt;직접&lt;/code&gt;해야하기 때문에 관련된 모든 부분을 관리할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;id3-2&quot;&gt;단점&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;다양한 플러그인 -&amp;gt; 플러그인 지옥&lt;/li&gt;
  &lt;li&gt;규모가 &lt;code class=&quot;highlighter-rouge&quot;&gt;작은&lt;/code&gt; 프로젝트의 경우, 설정하는데 리소스 &lt;code class=&quot;highlighter-rouge&quot;&gt;낭비&lt;/code&gt;가 발생할 수 있음&lt;/li&gt;
  &lt;li&gt;호스팅을 &lt;code class=&quot;highlighter-rouge&quot;&gt;직접&lt;/code&gt;해야하기 때문에 서버 운영 및 관리 &lt;code class=&quot;highlighter-rouge&quot;&gt;비용&lt;/code&gt;이 발생&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;id4&quot;&gt;개인적인 견해로는&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;CI/CD를 적용해야 한다는 생각에 제일 유명한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jenkins&lt;/code&gt;를 사용하려는 사람들이 많은것 같다.&lt;br /&gt;
하지만, Jenkins는 오래된 만큼 장단점이 확실한 솔루션임을 알고 사용했으면 좋겠다.&lt;/p&gt;

&lt;p&gt;특히 Build Server를 직접 구매 및 운영해야 하기 때문에 발생하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;단점&lt;/code&gt;이 생각보다 크게 다가오게 된다.&lt;br /&gt;
하나부터 열까지 전부 환경설정을 구축해야하며, 서버를 관리하는데 발생하는 비용이 &lt;code class=&quot;highlighter-rouge&quot;&gt;낭비&lt;/code&gt;가 될 수 있기 때문이다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Jenkins를 사용할 때, 각종 &lt;code class=&quot;highlighter-rouge&quot;&gt;방화벽&lt;/code&gt; 작업이나 서버의 &lt;code class=&quot;highlighter-rouge&quot;&gt;관리&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;운용&lt;/code&gt;등은 생각보다 많은 리소스를 요구한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;따라서 규모가 크지않은 프로젝트거나, 외부 클라우드 서비스를 이용하는 상황등이라면 Jenkins말고 &lt;code class=&quot;highlighter-rouge&quot;&gt;다른&lt;/code&gt; 서비스도 고려해볼 가치가 있다고 생각한다.&lt;br /&gt;
내가 글을 작성하는 이 블로그 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Travis&lt;/code&gt;를 사용하여 간단한 CI/CD 형태로 빌드 및 배포하게 되어있다.&lt;/p&gt;

&lt;p&gt;개발을 하면서 느끼는 거지만, 모든 일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;정답&lt;/code&gt;은 없다.&lt;br /&gt;
상황에 맞게 &lt;code class=&quot;highlighter-rouge&quot;&gt;최선&lt;/code&gt;의 방법을 채택하여 가장 높은 &lt;code class=&quot;highlighter-rouge&quot;&gt;효율&lt;/code&gt;을 낼 수 있는 방안을 선택하는 것도 &lt;code class=&quot;highlighter-rouge&quot;&gt;일류&lt;/code&gt; 개발자의 자질이 아닐까.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;이 글에서는 언급하지 않았지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;CircleCI&lt;/code&gt;등 수많은 다른 방법도 존재한다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;id5&quot;&gt;Reference&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/devops-tools/jenkins-vs-gitlab.html&quot;&gt;https://about.gitlab.com/devops-tools/jenkins-vs-gitlab.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/continuous-integration-circleci-vs-travis-ci-vs-jenkins-41a1c2bd95f5&quot;&gt;https://hackernoon.com/continuous-integration-circleci-vs-travis-ci-vs-jenkins-41a1c2bd95f5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.thecodecampus.de/blog/jenkins-vs-gitlab-ci/&quot;&gt;https://www.thecodecampus.de/blog/jenkins-vs-gitlab-ci/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.cookapps.io/cook-dev/tech-stack/#ci-cd&quot;&gt;https://blog.cookapps.io/cook-dev/tech-stack/#ci-cd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>owin2828</name></author><category term="devops" /><summary type="html">이번 시리즈에서는 CI/CD 환경을 구축하여 App을 배포해보는 것이 목적이다. 이를 위해 Jenkins를 이용하여 앱을 빌드하고, AWS Code Deploy를 이용해 배포하는 환경을 구축할 것이다.</summary></entry></feed>